const pizzaSpan=document.getElementsByClassName("pizza-counter")[0],
pizzaName=document.getElementsByClassName("pizza-name")[0],
pizzaButton=document.getElementsByClassName("button")[0],
tempEmoji=document.getElementsByClassName("temp-emoji")[0],
pizzaIcon=document.getElementsByClassName("pizza-icon")[0],
clicksPerSecond=document.getElementsByClassName("counter")[0],
statusText=document.getElementsByClassName("status")[0],
pizzasContainer=document.getElementsByClassName("pizzas")[0],
discoverCount=document.getElementsByClassName("discover-count")[0],
totalOfPizzas=document.getElementsByClassName("total-of-pizzas")[0],
pizzaPercentage=document.getElementsByClassName("pizza-percentage")[0],
totalNumberOfPizzas=pizzasContainer.childElementCount;
var pizzaNumber=0,discoveredPizza=0,clicks=0;
function addPizza() {
    pizzaNumber++;
    pizzaSpan.innerText = pizzaNumber;
    clicks++;

    if (pizzaNumber === 1) {
        let classicoElement = document.getElementsByClassName("classico")[0];
        if (classicoElement) {
            let img = classicoElement.getElementsByTagName("img")[0];
            if (img) {
                img.classList.add("reveal");
            }
            let span = classicoElement.getElementsByTagName("span")[0];
            if (span) {
                span.innerText = Number(span.innerText) + 1;
            }
            discoveredPizza++;
            pizzaName.innerText = "El Classico";
            discoverCount.innerText = discoveredPizza;
            pizzaPercentage.innerText = String("(" + Number(discoveredPizza / totalNumberOfPizzas * 100).toFixed(2) + "%)").replace(".", ",");
            setTimeout(() => {
                pizzaButton.removeChild(tempEmoji);
                pizzaIcon.style.display = "block";
            }, 50);
        }
    } else {
        function playAudio(audioFile) {
            var audio = new Audio(audioFile);
            audio.play().catch(error => {
                console.error("Error playing audio: ", error);
            });
        }
        // Update status text based on pizzaNumber
        if (Number((discoveredPizza / totalNumberOfPizzas * 100).toFixed(2)) >= 100 && pizzaNumber >= 10000) {
            playAudio("Harry KANE.mp3");
            statusText.innerText = "El Rey de España";
        } else if (pizzaNumber >= 5000) {
            if (pizzaNumber === 5000) {
                playAudio("Harry KANE.mp3");
                statusText.innerText = "Énorme fanatique de pizza";
            }
        } else if (pizzaNumber >= 1000) {
            if (pizzaNumber === 1000) {
                playAudio("Harry KANE.mp3");
                statusText.innerText = "Poltronepizza, pizza della qualità";
            }
        } else if (pizzaNumber >= 500) {
            statusText.innerText = "Mister V";
        } else if (pizzaNumber >= 250) {
            statusText.innerText = "Pizzaiolo";
        } else if (pizzaNumber >= 50) {
            statusText.innerText = "Expérimenté";
        } else if (pizzaNumber >= 10) {
            statusText.innerText = "Apprenti";
        } else if (pizzaNumber >= 10000) {
            playAudio("Harry KANE.mp3");
            statusText.innerText = "pas mal les bzez";
        }

        // Function to select and execute a random action based on chance
        function selectRandomAction(e) {
            // Calculate the total chance sum
            var totalChance = e.reduce((sum, item) => sum + item.chance, 0);
            // Round down the total chance to an integer
            const roundedTotalChance = Math.floor(totalChance);
            // Generate a random number between 0 and the rounded total chance
            let randomNumber = Math.random() * roundedTotalChance;
            // Find and execute the action corresponding to the random number
            e.find(item => {
                randomNumber -= item.chance;
                if (randomNumber <= 0) {
                    item.action();
                    return true;
                }
                return false;
            });
        }

        // Array of chance-action pairs
        const chanceActions = [
            { chance: 90, action: () => { e = "classico"; } },
            { chance: 50, action: () => { e = "royal"; } },
            { chance: 40, action: () => { e = "napolitaino"; } },
            { chance: 30, action: () => { e = "sus"; } },
            { chance: 1, action: () => { e = "uno-fromage"; } },
            { chance: 5, action: () => { e = "dos-fromages"; } },
            { chance: 10, action: () => { e = "tres-fromages"; } },
            { chance: 80, action: () => { e = "cuatro-fromages"; } },
            { chance: 20, action: () => { e = "cinco-fromages"; } },
            { chance: 15, action: () => { e = "seis-fromages"; } },
            { chance: 10, action: () => { e = "siete-fromages"; } },
            { chance: 5, action: () => { e = "ocho-fromages"; } },
            { chance: 4, action: () => { e = "nueve-fromages"; } },
            { chance: 3, action: () => { e = "diez-fromages"; } },
            { chance: 2, action: () => { e = "once-fromages"; } },
            { chance: 1, action: () => { e = "doce-fromages"; } },
            { chance: 0.75, action: () => { e = "trece-fromages"; } },
            { chance: 0.5, action: () => { e = "catorce-fromages"; } },
            { chance: 0.25, action: () => { e = "quince-fromages"; } },
            { chance: 0.15, action: () => { e = "dieciseis-fromages"; } },
            { chance: 0.1, action: () => { e = "diecisiete-fromages"; } },
            { chance: 0.075, action: () => { e = "dieciocho-fromages"; } },
            { chance: 0.05, action: () => { e = "diecinueve-fromages"; } },
            { chance: 0.01, action: () => { e = "veinte-fromages"; } },
            { chance: 1, action: () => { e = "bronzo"; } },
            { chance: 0.01, action: () => { e = "argento"; } },
            { chance: 0.001, action: () => { e = "oro"; } },
            { chance: 25, action: () => { e = "olivo"; } },
            { chance: 10, action: () => { e = "amogus"; } },
            { chance: 5, action: () => { e = "tiny"; } },
            { chance: 35, action: () => { e = "big"; } },
            { chance: 5, action: () => { e = "pizza-del-pizza"; } },
            { chance: 10, action: () => { e = "invertado"; } },
            { chance: 10, action: () => { e = "pato"; } },
            { chance: 10, action: () => { e = "cake"; } },
            { chance: 5, action: () => { e = "chokora"; } },
            { chance: 5, action: () => { e = "multicolores"; } },
            { chance: 2, action: () => { e = "miam"; } },
            { chance: 2, action: () => { e = "conservo"; } },
            { chance: 1, action: () => { e = "pan"; } },
            { chance: 0.5, action: () => { e = "parpaing"; } },
            { chance: 0.95, action: () => { e = "kyuju"; } },
            { chance: 5, action: () => { e = "gray"; } },
            { chance: 3, action: () => { e = "smiley"; } },
            { chance: 0.5, action: () => { e = "glitch"; } },
            { chance: 8, action: () => { e = "stop"; } },
            { chance: 5, action: () => { e = "navidad"; } },
            { chance: 5, action: () => { e = "piensa"; } },
            { chance: 2, action: () => { e = "censored"; } },
            { chance: 5, action: () => { e = "transparento"; } },
            { chance: 10, action: () => { e = "paint"; } },
            { chance: 30, action: () => { e = "rondo"; } },
            { chance: 0.37, action: () => { e = "kurai"; } },
            { chance: 10, action: () => { e = "pepperoni-party"; } },
            { chance: 0.07, action: () => {
                console.log("KANE action");
                e = "KANE";
                const audio = new Audio("Harry KANE.mp3"); // Ensure this path is correct

                audio.play().then(() => {
                    console.log("Audio playing");
                    const kaneElements = document.getElementsByClassName('KANE');

                    for (let i = 0; i < kaneElements.length; i++) {
                        // Left click to play the audio
                        kaneElements[i].onclick = () => {
                            audio.play().catch(error => {
                                console.error("Error playing audio: ", error);
                            });
                        };

                        // Right click for download confirmation
                        kaneElements[i].oncontextmenu = (event) => {
                            event.preventDefault(); // Prevent default context menu
                            if (confirm('Êtes-vous sûr(e) de vouloir télécharger Harry Kane?')) {
                                window.location.href = 'https://drive.google.com/uc?export=download&id=1SmBvAmHAIDhLgle1l02Btjls8GGL74m4';
                            }
                            return false; // Prevent further right-click actions
                        };

                        // Mouseover to play the audio
                        kaneElements[i].onmouseover = () => {
                            audio.play().catch(error => {
                                console.error("Error playing audio: ", error);
                            });
                        };

                        // Mouseout to play the audio
                        kaneElements[i].onmouseout = () => {
                            audio.play().catch(error => {
                                console.error("Error playing audio: ", error);
                            });
                        };

                        // Mouseleave to play the audio
                        kaneElements[i].onmouseleave = () => {
                            audio.play().catch(error => {
                                console.error("Error playing audio: ", error);
                            });
                        };

                        // Play audio when Ctrl key is pressed
                        document.addEventListener('keydown', function(event) {
                            if (event.ctrlKey) {
                                audio.play().catch(error => {
                                    console.error("Error playing audio: ", error);
                                });
                            }
                        });
                    }
                }).catch((error) => {
                    console.error("Audio play failed: ", error);
                });
            }},
        ];
        
        // Execute a random action based on defined chances
        selectRandomAction(chanceActions);
        
        // Update the pizza icon and name for the selected pizza
        pizzaIcon.src = `./Pizza%20Land%20-%20BakaTaida.rf.gd_fichiers/el-${e}.png`;
        pizzaName.innerText = "El " + e.charAt(0).toUpperCase() + e.slice(1).replace(/([A-Z])/g, " $1").replace(/-+/g, " ").trim().replace("peg", "PEG");
        // Increment the count for the selected pizza
        document.getElementsByClassName(e)[0].getElementsByTagName("span")[0].innerText =
            Number(document.getElementsByClassName(e)[0].getElementsByTagName("span")[0].innerText) + 1;
        // Reveal the pizza if it hasn't been revealed yet
        if (!document.getElementsByClassName(e)[0].getElementsByTagName("img")[0].classList.contains("reveal")) {
            discoveredPizza++;
            discoverCount.innerText = discoveredPizza;
            pizzaPercentage.innerText = String("(" + Number(discoveredPizza / totalNumberOfPizzas * 100).toFixed(2) + "%)").replace(".", ",");
            document.getElementsByClassName(e)[0].getElementsByTagName("img")[0].classList.add("reveal");
        }
    }
}

// Function to handle secret pizza discovery
function getSecretPizza(e) {
    e.remove(); // Remove the clicked element
    pizzaNumber++;
    pizzaSpan.innerText = pizzaNumber; // Update the displayed pizza count
    discoveredPizza++;
    discoverCount.innerText = discoveredPizza; // Update the displayed discovered pizza count
    pizzaPercentage.innerText = String("(" + Number(discoveredPizza / totalNumberOfPizzas * 100).toFixed(2) + "%)").replace(".", ","); // Update the discovered percentage
    clicks++;
    if (tempEmoji) {
        setTimeout(() => {
            pizzaButton.removeChild(tempEmoji);
            pizzaIcon.style.display = "block";
        }, 50);
    }
    pizzaIcon.src = "./img/pizzas/el-secreto.png"; // Set secret pizza icon
    pizzaName.innerText = "El Secreto"; // Set secret pizza name
    
    // Create a new secret pizza element
    const a = document.createElement("div");
    const c = document.createElement("span");
    const n = document.createElement("img");
    
    a.className = "secreto";
    c.innerText = "1";
    n.width = 50;
    n.height = 50;
    n.className = "reveal";
    n.src = "./img/pizzas/el-secreto.png";
    n.alt = "Pizza secrète";
    n.loading = "lazy";
    n.draggable = false;
    
    a.appendChild(c);
    a.appendChild(n);
    pizzasContainer.appendChild(a); // Add the secret pizza to the container
}

totalOfPizzas.innerText = totalNumberOfPizzas; // Display the total number of pizzas

// Update the clicks per second every second
setInterval(() => {
    clicksPerSecond.innerText = clicks;
    clicks = 0;
}, 1000);